#!/bin/sh

# Copyright (c) 2024 Henry Ford <fordhenry2299@gmail.com>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

PASSDIR="${HOME}/.passes"
METADIR="${PASSDIR}/meta"
PRIVKEY="${METADIR}/identities"
PUBKEY="${METADIR}/recipients"

add_usage() {
	echo "pass: pass add [-m] password" 1>&2
}

add() {
	noprompt=0
	while getopts m name
	do
		case $name in
		m) noprompt=1 ;;
		?) add_usage ; exit 2 ;;
		esac
	done

	shift $(($OPTIND - 1))

	if [ $# -ne 1 ]; then
		add_usage
		exit 2
	fi

	if [ $noprompt -eq 0 ]; then
		prompt "Enter a password: " first
		prompt "Re-Enter the password: " second

		if [ "${first}" != "${second}" ]; then
			echo "Passwords do not match." 1>&2
			exit 1
		fi

		ENTERED="${first}"
	else
		ENTERED="$(cat)"
	fi

	mkdir -p "${PASSDIR}/passwords/$(dirname "$1")" || exit 1

	echo "${ENTERED}" | age -R "${PUBKEY}" -i "${PRIVKEY}" -e -o \
		"${PASSDIR}/passwords/$1" || exit 1
}

get_usage() {
	echo "usage: pass get password" 1>&2
}

get() {
	while getopts "" name
	do
		case $name in
		?) get_usage ; exit 2 ;;
		esac
	done

	shift $(($OPTIND - 1))

	if [ $# -ne 1 ]; then
		get_usage
		exit 2
	fi

	if [ ! -f "${PASSDIR}/passwords/$1" ]; then
		echo "No such password found" 1>&2
		exit 1
	fi

	age -i "${PRIVKEY}" -d "${PASSDIR}/passwords/$1" || exit 1
}

get1() {
	if [ $# -ne 1 ]; then
		usage
		exit 2
	fi

	get "$1"
}

init_usage() {
	echo "usage: pass init" 1>&2
}

init() {
	while getopts "" name
	do
		case $name in
		?) init_usage; exit 2 ;;
		esac
	done

	shift $(($OPTIND - 1))

	if [ $# -ne 0 ]; then
		init_usage
		exit 2
	fi

	if [ -d "${PASSDIR}" ]; then
		echo "${PASSDIR}" already exists 1>&2
		exit 1
	fi

	mkdir -m 0700 "${PASSDIR}" || exit 1
	mkdir -m 0700 "${METADIR}" || exit 1

	key="$(age-keygen 2>/dev/null)" || exit 1
	echo "${key}" | age -p > "${PRIVKEY}" || exit 1
	echo "${key}" | age-keygen -y > "${PUBKEY}" || exit 1
}

prompt() {
	stty -echo
	printf "%s" "$1"
	read -r "$2"
	printf '\n'
	stty echo
}

usage() {
	echo "usage: pass cmd [arg ...]" 1>&2
}

while getopts "" name
do
	case $name in
	?) usage; exit 2 ;;
	esac
done

shift $(($OPTIND - 1))

if [ $# -eq 0 ]; then
	usage
	exit 2
fi

case $1 in
add|get|init)
	cmd=$1
	shift 1
	$cmd "$@" ;;
*) get1 "$@"; ;;
esac
